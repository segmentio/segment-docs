const axios = require('axios');
const path = require('path');
const fs = require('fs');
const fm = require('front-matter');
const yaml = require('js-yaml');

API_URL = "https://api.github.com/repos/segmentio/"

const getLog = async (url = "") => {
  try {
   const res = await axios.get(url, {
      headers: {
        'Content-Type': 'application/json',
      }
    });
    return res.data
  } catch (error) {
    console.log(error)
  }
}
let libraries = ["analytics-android","analytics-ios", "analytics-react-native", "analytics-node", "analytics-python", "analytics-php", "analytics-go", "analytics-java", "analytics.NET"]

const replace_token = /.+\r\n(-{2,}\r\n)|.+\r\n(={2,}\r\n)/mg;
const subst = ``

const updateLog = async(library) => {

  let releasesUpdated = []
  let url = API_URL+library+'/releases'
  const releases = await getLog(url)
  releases.forEach(release => {
    let note = release.body
    cleaned_note = note.replace(replace_token,subst)
    let updatedRelease = {
      version: release.name,
      url: release.html_url,
      date: release.published_at,
      notes: cleaned_note
    }
   releasesUpdated.push(updatedRelease) 
  })
  
  const options = { noArrayIndent: true };
  var todayDate = new Date().toISOString().slice(0,10);
  output = "# AUTOGENERATED FROM GITHUB API. DO NOT EDIT\n"
  output += "# Releases last updated " + todayDate + " \n";
  output += yaml.safeDump({ releases: releasesUpdated }, options);
  fs.writeFileSync(path.resolve(__dirname, `../src/_data/changelogs/${library}.yml`), output);
}

libraries.forEach(library => {
  updateLog(library);
});
